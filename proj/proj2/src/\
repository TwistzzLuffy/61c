.globl matmul

.text
# =======================================================
# FUNCTION: Matrix Multiplication of 2 integer matrices
# 	d = matmul(m0, m1)
# Arguments:
# 	a0 (int*)  is the pointer to the start of m0
#	a1 (int)   is the # of rows (height) of m0
#	a2 (int)   is the # of columns (width) of m0
#	a3 (int*)  is the pointer to the start of m1
# 	a4 (int)   is the # of rows (height) of m1
#	a5 (int)   is the # of columns (width) of m1
#	a6 (int*)  is the pointer to the the start of d
# Returns:
#	None (void), sets d = matmul(m0, m1)
# Exceptions:
#   Make sure to check in top to bottom order!
#   - If the dimensions of m0 do not make sense,
#     this function terminates the program with exit code 59
#   - If the dimensions of m1 do not make sense,
#     this function terminates the program with exit code 59
#   - If the dimensions of m0 and m1 don't match,
#     this function terminates the program with exit code 59
# =======================================================
matmul:

	li t0,1
	blt a1,t0,call_exit
	blt a2,t0,call_exit
	blt a4,t0,call_exit
	blt a5,t0,call_exit
	bne a2,t0,call_exit
    # Error checks

	addi sp,sp,-56
	sw s0,0(sp)
	sw s1,4(sp)
	sw s2,8(sp)
	sw s3,12(sp)
	sw s4,16(sp)
	sw ra,20(sp)
	sw s5,24(sp)
	sw a0,28(sp)
	sw a1,32(sp)
	sw a2,36(sp)
	sw a3,40(sp)
	sw a4,44(sp)
	sw a5,48(sp)
	sw a6,52(sp)

    # Prologue

	mv s0,a0
	mv s1,a3
	mv s3,a2
	mv s5,x0
outer_loop_start:
	beqz s3,outer_loop_end
	mv s2,a5

inner_loop_start:
##save
#	addi sp,sp,-28
#	sw a0,0(sp)
#	sw a1,4(sp)
#	sw a2,8(sp)
#	sw a3,12(sp)
#	sw a4,16(sp)
#	sw a5,20(sp)
#	sw a6,24(sp)
	beqz s2,inner_loop_end
	li a3,1
	mv a4,a5
	mv a1,s1
	#mv a0,s0
	jal ra,dot
	mv t0,a6
	sw a0,0(t0)
	addi s5,s5,1
	slli s5,s5,2
	add t0,a6,s5
	addi s2,s2,-1
##recover
#	lw a0,0(sp)
#	lw a1,4(sp)
#	lw a2,8(sp)
#	lw a3,12(sp)
#	lw a4,16(sp)
#	lw a5,20(sp)
#	lw a6,24(sp)	
#	addi sp,sp,28
	j inner_loop_start

inner_loop_end:
	addi s3,s3,-1
	j outer_loop_start

call_exit:
	li a1,59
	call exit2

outer_loop_end:
        lw s0,0(sp)
        lw s1,4(sp)
        lw s2,8(sp)
        lw s3,12(sp)
        lw s4,16(sp)
        lw ra,20(sp)
	lw s5,24(sp)
	lw a0,28(sp)
	lw a1,32(sp)
	lw a2,36(sp)
	lw a3,40(sp)
	lw a4,44(sp)
	lw a5,48(sp)
	lw a6,52(sp)	
	addi sp,sp,56
    # Epilogue


    ret
